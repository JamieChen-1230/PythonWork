事件驅動編程：是一種編程範式，這里程序的執行流由【外部事件】來決定
    ◇ 特點是包含一個事件循環，當外部事件發生時使用回調機制來觸發相應的處理

進程的阻塞：當進程進入阻塞狀態，是不佔用CPU資源的

進程切換：非常耗資源

為什麼數據一定要先到內核區，直接到用戶內存不是更直接嗎？
Ans:因為只有操作系統能夠溝通硬件和軟件

I/O 模型：
    ◇ 阻塞I/O：一個窗口排隊買票
    ◇ 非阻塞I/O：一個窗口買票，每隔幾秒看票到了沒
    ◇ 多路複用I/O：多個窗口排隊買票
        →I/O多路複用優勢：可以同時監聽多個連結
        →有三種類型：
            1.select：連結上限只有1024
            2.poll：windows無
            3.epoll：windows無
    ◇ 異步I/O：打電話訂票，票好了到時會通知你
        →對用戶而言，無阻塞，效率最高

同步&異步：
只要有一丁點阻塞就是同步I/O，沒有則是異步

觸發方式：
    ◇ 水平觸發：
        只有高電平(1)或低電平(0)時才觸發通知，只要在這兩種狀態就能得到通知
    ◇ 邊緣觸發：
        只有電平發生變化(高電平到低電平(1到0)，或者低電平到高電平(0到1))